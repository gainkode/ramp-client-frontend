{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": [
        "no-null",
        "deprecation"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [
              "Component",
              "Directive",
              "View",
              "Page"
            ]
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-empty-lifecycle-method": "off",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "warn",
          {
            "allowExpressions": true
          }
        ],
        "indent": "off",
        "@typescript-eslint/indent": [
          "warn",
          "tab",
          {
            "SwitchCase": 1,
            "ignoredNodes": [
              "PropertyDefinition[decorators]",
              "TSUnionType",
              "TSTypeParameterInstantiation",
              "TSIntersectionType"
            ]
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "multilineDetection": "brackets"
          }
        ],
        // Too many errors for now, will be changed to error in future
        "@typescript-eslint/no-explicit-any": [
          "warn",
          {
            "ignoreRestArgs": true
          }
        ],
        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreVoid": true,
            "ignoreIIFE": true
          }
        ],
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": {
              "properties": false,
              "arguments": false
            }
          }
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "args": "none"
          }
        ],
        "object-curly-spacing": "off",
        "@typescript-eslint/object-curly-spacing": [
          "warn",
          "always"
        ],
        "semi": "off",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/semi": [
          "error"
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            "parameter": true,
            "propertyDeclaration": true
          }
        ],
        "quotes": "off",
        "@typescript-eslint/quotes": [
          "warn",
          "single",
          {
            "avoidEscape": true,
            "allowTemplateLiterals": true
          }
        ],
        "eqeqeq": [
          "warn",
          "smart"
        ],
        "deprecation/deprecation": "error",
        "no-console": "warn",
        "no-constant-condition": [
          "error",
          {
            "checkLoops": false
          }
        ],
        //"no-null/no-null": 1,
        "prefer-const": "warn"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/accessibility-alt-text": [
          "warn"
        ],
        "@angular-eslint/template/accessibility-elements-content": [
          "warn"
        ],
        "@angular-eslint/template/accessibility-valid-aria": [
          "warn"
        ],
        "@angular-eslint/template/attributes-order": [
          "warn"
        ],
        "@angular-eslint/template/banana-in-box": [
          "error"
        ],
        "@angular-eslint/template/button-has-type": [
          "error"
        ],
        "@angular-eslint/template/conditional-complexity": [
          "error",
          {
            "maxComplexity": 5
          }
        ],
        "@angular-eslint/template/eqeqeq": [
          "warn"
        ],
        "@angular-eslint/template/no-any": [
          "error"
        ],
        "@angular-eslint/template/no-call-expression": [
          "warn",
          {
            "allowList": []
          }
        ],
        "@angular-eslint/template/no-distracting-elements": [
          "warn"
        ],
        "@angular-eslint/template/no-duplicate-attributes": [
          "error"
        ],
        "@angular-eslint/template/no-inline-styles": [
          "warn"
        ],
        "@angular-eslint/template/no-negated-async": [
          "error"
        ]
      }
    }
  ]
}
